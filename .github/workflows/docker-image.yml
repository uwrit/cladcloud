name: Build Docker Images

on:
  push:
    branches:
    - "main"
  pull_request:
    branches:
    - "main"

env:
  # dynamic doesn't work, only static
  BUILD_NUM: $(date +%Y%m%d%H%M%S)

jobs:

  clear-cache:
    runs-on: self-hosted

    steps:
    - name: Clear docker cache
      run: docker system prune -af --volumes
      # run: docker buildx prune -a --verbose
    - name: export BUILD_NUM to file
      run: date +%Y%m%d%H%M%S > ~/BUILD_NUM

  build-degauss-api:
    runs-on: self-hosted
    needs: clear-cache

    steps:
    - uses: actions/checkout@v4
    - name: import BUILD_NUM from file
      run: echo "BUILD_NUM=$(cat ~/BUILD_NUM)" >> $GITHUB_ENV
    - name: print env
      run: env
    - name: Build the degauss-geocoder-api image
      run: docker build --load --cpu-quota $(( $(nproc --all)*100000 )) degauss-alpine/degauss-geocoder-api --tag degauss-geocoder-api:${{ env.BUILD_NUM }}
    - name: Run Trivy CVE vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: degauss-geocoder-api:${{ env.BUILD_NUM }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-degauss-foundry:
    runs-on: self-hosted
    needs: clear-cache

    steps:
    - uses: actions/checkout@v4
    - name: import BUILD_NUM from file
      run: echo "BUILD_NUM=$(cat ~/BUILD_NUM)" >> $GITHUB_ENV
    - name: print env
      run: env
    - name: Build the degauss-foundry image
      run: docker build --load --cpu-quota $(( $(nproc --all)*100000 )) degauss-foundry --tag degauss-foundry:${{ env.BUILD_NUM }}
    - name: Run Trivy CVE vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: degauss-foundry:${{ env.BUILD_NUM }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-nominatim:
    runs-on: self-hosted
    needs: clear-cache

    steps:
    - uses: actions/checkout@v4
    - name: import BUILD_NUM from file
      run: echo "BUILD_NUM=$(cat ~/BUILD_NUM)" >> $GITHUB_ENV
    - name: print env
      run: env
    - name: Build the nominatim image
      run: docker build --load --cpu-quota $(( $(nproc --all)*100000 )) nominatim-docker/nominatim-php83 --tag nominatim:${{ env.BUILD_NUM }}
    - name: Run Trivy CVE vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: nominatim:${{ env.BUILD_NUM }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-postgis:
    runs-on: self-hosted
    needs: clear-cache

    steps:
    - uses: actions/checkout@v4
    - name: import BUILD_NUM from file
      run: echo "BUILD_NUM=$(cat ~/BUILD_NUM)" >> $GITHUB_ENV
    - name: print env
      run: env
    - name: Build the postgis image
      run: docker build --load --cpu-quota $(( $(nproc --all)*100000 )) postgis-docker-alpine-db/src/alpinedb --tag postgis:${{ env.BUILD_NUM }}
    - name: Run Trivy CVE vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: postgis:${{ env.BUILD_NUM }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
